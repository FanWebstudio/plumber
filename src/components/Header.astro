---
import "@fontsource/inter/400.css";
import "@fontsource/inter/500.css";
import "@fontsource/inter/600.css";
import "@fortawesome/fontawesome-free/css/all.min.css";

interface NavItem {
    href: string;
    text: string;
    isCurrent?: boolean;
}

interface SocialLink {
    href: string;
    icon: string;
    label: string;
}

interface PhoneConfig {
    raw: string;
    formatted: string;
}

const navItems: NavItem[] = [
    { href: "/", text: "Home", isCurrent: true },
    { href: "/about", text: "About" },
    { href: "/service", text: "Service" },
    { href: "/blog", text: "Blog" },
    { href: "/contact", text: "Contact" },
];

const socialLinks: SocialLink[] = [
    { href: "#", icon: "far fa-envelope", label: "Send us an email" },
    { href: "#", icon: "fab fa-facebook-f", label: "Visit our Facebook page" },
    { href: "#", icon: "fab fa-instagram", label: "Follow us on Instagram" },
    { href: "#", icon: "fab fa-twitter", label: "Follow us on Twitter" },
];

const phone: PhoneConfig = {
    raw: "10712819795",
    formatted: "+1 071 281 9795"
};
---

<header>
    <!-- Top bar with phone and social links -->
    <div class="hidden md:block w-full py-3 bg-white">
        <div
            class="w-full max-w-[1295.81px] mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center"
        >
            <!-- Phone number -->
            <address class="not-italic">
                <a
                    href={`tel:${phone.raw}`}
                    class="text-dark text-sm font-semibold leading-[22px] no-underline hover:text-primary focus:outline-none focus:text-primary focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 transition-all flex items-center gap-2"
                    aria-label={`Call us at ${phone.formatted}`}
                >
                    <span
                        class="w-4 h-4 flex items-center justify-center"
                        aria-hidden="true"
                    >
                        <i class="fas fa-phone-alt text-primary"></i>
                    </span>
                    <span>{phone.formatted}</span>
                </a>
            </address>

            <!-- Social links -->
            <ul class="flex items-center gap-6 list-none" role="list">
                {
                    socialLinks.map(({ href, icon, label }) => (
                        <li>
                            <a
                                href={href}
                                class="w-4 h-4 flex items-center justify-center text-dark hover:text-primary focus:outline-none focus:text-primary focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 transition-all"
                                aria-label={label}
                            >
                                <i class={icon} aria-hidden="true" />
                            </a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>

    <hr
        class="hidden sm:block w-full h-px bg-divider border-0"
        role="separator"
        aria-hidden="true"
    />

    <!-- Navigation wrapper -->
    <div class="bg-white w-full" id="sticky-nav">
        <!-- Main navigation -->
        <div class="w-full flex justify-center py-4">
            <div class="w-full max-w-[1296px] px-4 sm:px-6 lg:px-8">
                <div class="flex flex-row justify-between items-center">
                    <!-- Logo -->
                    <a
                        href="/"
                        class="flex items-center gap-3 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-lg transition-all"
                        aria-label="Plumby - Home"
                    >
                        <span
                            class="flex items-center text-[38px] text-primary"
                            aria-hidden="true"
                        >
                            <i class="fas fa-faucet"></i>
                        </span>
                        <span class="text-[28px] font-bold text-dark">Plumby</span>
                    </a>

                    <!-- Desktop Navigation -->
                    <nav class="hidden lg:block">
                        <ul class="flex items-center gap-[50px] list-none" role="list">
                            {
                                navItems.map(({ href, text, isCurrent }) => (
                                    <li>
                                        <a
                                            href={href}
                                            class={`text-base font-medium leading-6 transition-all hover:text-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded px-2 py-1 ${
                                                isCurrent ? "text-primary" : "text-dark"
                                            }`}
                                            aria-current={isCurrent ? "page" : undefined}
                                        >
                                            {text}
                                        </a>
                                    </li>
                                ))
                            }
                        </ul>
                    </nav>

                    <!-- Mobile menu button -->
                    <button
                        type="button"
                        class="lg:hidden inline-flex items-center justify-center p-2 rounded-lg text-dark hover:text-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 transition-all"
                        aria-controls="mobile-menu"
                        aria-expanded="false"
                        id="mobile-menu-button"
                    >
                        <span class="sr-only">Open main menu</span>
                        <i class="fas fa-bars text-2xl"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Mobile menu -->
        <div
            id="mobile-menu"
            class="lg:hidden"
            aria-labelledby="mobile-menu-button"
            hidden
        >
            <div class="w-full max-w-[1296px] mx-auto px-4 md:px-8 py-4">
                <ul class="flex flex-col gap-4 list-none" role="list">
                    {
                        navItems.map(({ href, text, isCurrent }) => (
                            <li>
                                <a
                                    href={href}
                                    class={`block w-full text-base font-medium leading-6 transition-all hover:text-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded px-2 py-1 ${
                                        isCurrent ? "text-primary" : "text-dark"
                                    }`}
                                    aria-current={isCurrent ? "page" : undefined}
                                >
                                    {text}
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </div>
        </div>
    </div>
</header>

<script>
    // Types for TypeScript
    interface MobileMenuElements {
        button: HTMLButtonElement;
        menu: HTMLElement;
    }

    document.addEventListener('DOMContentLoaded', () => {
        const elements: MobileMenuElements = {
            button: document.getElementById('mobile-menu-button') as HTMLButtonElement,
            menu: document.getElementById('mobile-menu') as HTMLElement
        };

        if (!elements.button || !elements.menu) return;

        elements.button.addEventListener('click', () => {
            const isExpanded = elements.button.getAttribute('aria-expanded') === 'true';
            elements.button.setAttribute('aria-expanded', (!isExpanded).toString());
            elements.menu.hidden = isExpanded;
        });

        // Close menu on escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && elements.button.getAttribute('aria-expanded') === 'true') {
                elements.button.setAttribute('aria-expanded', 'false');
                elements.menu.hidden = true;
                elements.button.focus();
            }
        });

        // Handle focus trap in mobile menu
        const focusableElements = elements.menu.querySelectorAll(
            'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])'
        );
        const firstFocusable = focusableElements[0] as HTMLElement;
        const lastFocusable = focusableElements[focusableElements.length - 1] as HTMLElement;

        elements.menu.addEventListener('keydown', (e) => {
            if (e.key !== 'Tab') return;

            if (e.shiftKey) {
                if (document.activeElement === firstFocusable) {
                    lastFocusable.focus();
                    e.preventDefault();
                }
            } else {
                if (document.activeElement === lastFocusable) {
                    firstFocusable.focus();
                    e.preventDefault();
                }
            }
        });
    });
</script>
