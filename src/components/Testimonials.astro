---
import { Image } from "astro:assets";
import type { TestimonialData } from "../types/Testimonial";

interface Props {
  testimonials?: TestimonialData[];
}

const { testimonials = [] } = Astro.props;

const testimonialData = testimonials.length > 0 ? testimonials : [
  {
    name: "Devon Lane",
    location: "New York",
    avatar: "/images/testimonials/devon-lane.jpg",
    quote:
      "Plumby's service was amazing! They arrived on time and quickly identified the problem with our pipes. They explained everything in detail and fixed the issue within an hour.",
  },
  {
    name: "Rosemary Sherman",
    location: "New York",
    avatar: "/images/testimonials/rosemary-sherman.jpg",
    quote:
      "Plumby's service was amazing! They arrived on time and quickly identified the problem with our pipes. They explained everything in detail and fixed the issue within an hour.",
  },
  {
    name: "Domingo Flores",
    location: "New York",
    avatar: "/images/testimonials/domingo-flores.jpg",
    quote:
      "I had a great experience with Plumby. Their team arrived on time and did an excellent job repairing my leaky faucet. They were professional, and completed the job quickly.",
  },
  {
    name: "Deborah Carr",
    location: "New York",
    avatar: "/images/testimonials/deborah-carr.jpg",
    quote:
      "I had a serious plumbing emergency in the middle of the night and Plumby was there to save the day. Their emergency service was prompt & life-saving.",
  },
  {
    name: "Fernando Sims",
    location: "New York",
    avatar: "/images/testimonials/fernando-sims.jpg",
    quote:
      "Plumby's service was amazing! They arrived on time and quickly identified the problem with our pipes. They explained everything in detail and fixed the issue within an hour.",
  },
];
---

<section 
  class="max-w-[1600px] mx-auto py-24 px-4 md:px-8 lg:px-20 bg-white"
  aria-labelledby="testimonials-heading"
>
  <div class="flex flex-col items-center w-full gap-[70px]">
    <header class="flex flex-col items-center text-center gap-4">
      <h2 
        id="testimonials-heading" 
        class="text-[48px] font-bold text-[#171A1F] leading-[54px]"
      >
        What Our Clients Say
      </h2>
      <p class="max-w-[614px] text-base text-[#495460] leading-6">
        Hear directly from those who've experienced our service
      </p>
    </header>

    <div 
      class="relative w-full max-w-full overflow-hidden px-0"
      aria-roledescription="carousel"
      aria-label="Customer testimonials carousel"
    >
      {/* Fade Left - Desktop Only */}
      <div
        class="hidden md:block absolute top-0 bottom-0 left-0 w-[250px] z-10 pointer-events-none bg-gradient-to-r from-white via-white/95 to-transparent"
        aria-hidden="true"
      >
      </div>

      {/* Fade Right - Desktop Only */}
      <div
        class="hidden md:block absolute top-0 bottom-0 right-0 w-[250px] z-10 pointer-events-none bg-gradient-to-l from-white via-white/95 to-transparent"
        aria-hidden="true"
      >
      </div>

      <div 
        id="testimonials-scroll-container" 
        class="relative w-full"
        role="region"
        aria-live="polite"
      >
        <div 
          id="testimonials-scroll" 
          class="flex gap-6 overflow-x-auto scroll-smooth scrollbar-hide px-4"
          role="list"
        >
          {
            testimonialData.map((testimonial, index) => (
              <article
                class="flex-shrink-0 w-[275px] p-6 bg-white border border-[#E2E7EC] rounded-lg flex flex-col gap-6 hover:scale-105 focus-within:scale-105 focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2 transition-all duration-300"
                data-testimonial-index={index}
                role="listitem"
                aria-label={`Testimonial from ${testimonial.name}`}
              >
                <Image
                  src={testimonial.avatar}
                  alt={`Portrait of ${testimonial.name}`}
                  class="w-20 h-20 rounded-full object-cover"
                  width={80}
                  height={80}
                  loading="lazy"
                />
                <div class="flex flex-col gap-4">
                  <div class="flex items-center gap-[7px]" aria-label={`5 out of 5 stars`}>
                    {[...Array(5)].map((_, i) => (
                      <Image
                        src="/images/star.png"
                        alt=""
                        class="w-[19px] h-[19px] object-contain"
                        width={19}
                        height={19}
                        loading="lazy"
                        aria-hidden="true"
                      />
                    ))}
                  </div>
                  <blockquote>
                    <p class="text-base text-[#495460] leading-6">
                      {testimonial.quote}
                    </p>
                  </blockquote>
                  <footer class="flex flex-col gap-1">
                    <cite class="text-base font-semibold text-[#171A1F] leading-6 not-italic">
                      {testimonial.name}
                    </cite>
                    <span class="text-sm text-[#495460] leading-5">
                      {testimonial.location}
                    </span>
                  </footer>
                </div>
              </article>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  interface ScrollConfig {
    container: HTMLElement;
    scrollContainer: HTMLElement;
    scrollAmount: number;
    scrollDuration: number;
    pauseOnHover: boolean;
  }

  document.addEventListener("DOMContentLoaded", () => {
    const container = document.getElementById("testimonials-scroll-container");
    const scrollContainer = document.getElementById("testimonials-scroll");
    
    if (!container || !scrollContainer) return;

    const config: ScrollConfig = {
      container,
      scrollContainer,
      scrollAmount: 1,
      scrollDuration: 30,
      pauseOnHover: true
    };

    let isScrolling = true;
    let scrollPosition = 0;
    let animationFrameId: number;

    function scroll() {
      if (!isScrolling) return;

      scrollPosition += config.scrollAmount;
      
      if (scrollPosition >= config.scrollContainer.scrollWidth / 2) {
        scrollPosition = 0;
      }
      
      config.scrollContainer.scrollLeft = scrollPosition;
      animationFrameId = requestAnimationFrame(scroll);
    }

    function startScroll() {
      if (!isScrolling) {
        isScrolling = true;
        animationFrameId = requestAnimationFrame(scroll);
      }
    }

    function stopScroll() {
      isScrolling = false;
      cancelAnimationFrame(animationFrameId);
    }

    // Start scrolling
    startScroll();

    // Pause on hover/focus
    if (config.pauseOnHover) {
      config.container.addEventListener("mouseenter", stopScroll);
      config.container.addEventListener("mouseleave", startScroll);
      config.container.addEventListener("focusin", stopScroll);
      config.container.addEventListener("focusout", startScroll);
    }

    // Handle visibility change
    document.addEventListener("visibilitychange", () => {
      if (document.hidden) {
        stopScroll();
      } else {
        startScroll();
      }
    });

    // Keyboard navigation
    config.container.addEventListener("keydown", (e) => {
      const SCROLL_AMOUNT = 100;
      
      switch (e.key) {
        case "ArrowLeft":
          e.preventDefault();
          config.scrollContainer.scrollLeft -= SCROLL_AMOUNT;
          break;
        case "ArrowRight":
          e.preventDefault();
          config.scrollContainer.scrollLeft += SCROLL_AMOUNT;
          break;
      }
    });

    // Cleanup on unmount
    return () => {
      stopScroll();
      config.container.removeEventListener("mouseenter", stopScroll);
      config.container.removeEventListener("mouseleave", startScroll);
      config.container.removeEventListener("focusin", stopScroll);
      config.container.removeEventListener("focusout", startScroll);
    };
  });
</script>

<style>
  /* Tailwind scrollbar hide plugin */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .scrollbar-hide {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  /* Responsive adjustments */
  @media (max-width: 1200px) {
    .testimonial-card {
      @apply snap-center;
    }
  }

  @media (max-width: 768px) {
    .testimonial-card {
      @apply w-[250px] p-4 gap-4 opacity-70 scale-95 hover:opacity-100 hover:scale-105 hover:z-10 hover:shadow-lg;
    }
  }

  @media (max-width: 480px) {
    .testimonial-card {
      @apply w-[220px];
    }
  }
</style>
